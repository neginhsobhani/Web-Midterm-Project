/*
fitting the html contents in the whole page
*/
html,body{
  height: 100%;
  width: 100%;
  margin: 0;
}

/*
styling the text area
- since we have two types of input(text an radio button) we choose the text type.
*/
input[type='text']{
  border-radius: 4px;
  outline: none;
  border: 1px black solid;
  padding: 2px;
}

/*
Styling the center rectangle
  - the goal here is a background image on a website that covers the entire browser window at all times.
  - I have also centered the inside container which is a rectangle here.
*/
#wrapper{
  height: 100%;
  width: 100%;
  margin: 0;
  display: flex;
  justify-content: center; 
  align-items: center;
  background-image: url("images/background.jpg");
  background-size: cover;
  background-position: center;
}

/*
The container here holds all the content in this page. For the display of the contents I have used flex.
- I have seta max-height property so that the height of this container doesn't change in different browsers and systems.
- For more beautiful display I have used padding and border-radius for the edges of the rectangle.
- In order to have a transparent container I have added 2 characters to the end of the hex code color of the background color(with 
  this method, the text transparency wouldn't change).
- I have givven the container shadow using box-shadow property.
- When you load this web page, the container fades in. In order to implement this animation I have defined an animation called 
  fade using @keyframes. 
*/
.container {
  width: 500px;
  max-height: 300px;
  display: flex;
  border-radius: 10px;
  background-color: #FFC0CBaa;
  padding: 15px 15px 30px 30px;
  font-family: Arial, Helvetica, sans-serif;
  box-shadow: 0px 0px 10px 10px #00000044;
  animation: fade 1.5s;
}

/*
Styling the columns of the container using flex
  - The container contains two columns and it is divided in half(width: 50%)
*/
.column {
  width: 50%;
  display: flex;
  flex-direction: column;
}

/*
Styling the 'save' button
*/
button[onclick="savePrediction()"] {
  margin-top: 20px;
}

/*
Styling the form using flex 
*/
form {
  min-height: 150px;
  display: flex;
  justify-content: space-between;
  flex-direction: column;
}

/*
This block is used for styling the error message.
- Since this error is not always shown, it is hidden by default.
- The error message box is centered for more beautiful display. 
- The contents of the error box message are centered as well. 
- I have used Google fonts as the font of error message.
*/
#pop-up{
  visibility: hidden;
  position: absolute;
  height: 64px;
  width: 400px;
  top: 20px;
  left: calc(50% - 200px);
  border-radius: 5px;
  background-color: #ee0000aa;
  color:white;
  font-weight: bolder;
  font-family: 'Roboto Mono', monospace;
  font-size: 18px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/*
This block is used for styling the buttons(submit, save, clear). 
border-radius is used to make the edges less sharp.
the cursor's shape is changed then the mouse is on the button area 
*/
button{
  border-radius: 3px;
  cursor: pointer;
  outline: none;
  border: 1px black solid;
}

/*
By the use of this block, the buttons background and text color changes
when mouse is on the button. 
*/
button:hover{
  background-color: palevioletred;
  color: white;
}

/*
The saved answer part(including header, clear button, saved answer) is hidden until
the user send a request(using submit button). 
This block is used to hide saved answer header using it's Id.
*/
#saved-answer-header{
  visibility: hidden;
}

/*
This block is used to hide clear button using it's Id
*/
#clear-button{
  visibility: hidden;
}

/*
This block is used to hide saved gender using it's Id
*/
#saved-gender{
  visibility: hidden;
}

/*
In this block we define an animation to use it for the main rectangle. 
By the use of this animation the rectangle fades in. 
*/
@keyframes fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 100%;
  }
}